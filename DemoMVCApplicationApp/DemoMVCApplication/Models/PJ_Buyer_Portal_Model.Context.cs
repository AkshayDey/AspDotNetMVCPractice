//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoMVCApplication.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Three_Sixty_RotationEntities : DbContext
    {
        public Three_Sixty_RotationEntities()
            : base("name=Three_Sixty_RotationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UnauthorizedLogInfo> UnauthorizedLogInfoes { get; set; }
        public virtual DbSet<UnauthorizedUserBlockInfo> UnauthorizedUserBlockInfoes { get; set; }
        public virtual DbSet<BuyerInfo> BuyerInfoes { get; set; }
        public virtual DbSet<BuyerInfo_UDTracking> BuyerInfo_UDTracking { get; set; }
        public virtual DbSet<CategoryInfo> CategoryInfoes { get; set; }
        public virtual DbSet<CategoryInfo_UDTracking> CategoryInfo_UDTracking { get; set; }
        public virtual DbSet<LogCheck> LogChecks { get; set; }
        public virtual DbSet<LogCheck_UDTracking> LogCheck_UDTracking { get; set; }
        public virtual DbSet<LoginSummary> LoginSummaries { get; set; }
        public virtual DbSet<MenuName> MenuNames { get; set; }
        public virtual DbSet<ProductFieldName> ProductFieldNames { get; set; }
        public virtual DbSet<UnitInfo> UnitInfoes { get; set; }
        public virtual DbSet<UnitInfo_UDTracking> UnitInfo_UDTracking { get; set; }
        public virtual DbSet<UserAuthentication> UserAuthentications { get; set; }
        public virtual DbSet<UserRegister> UserRegisters { get; set; }
        public virtual DbSet<UserRegister_UDTracking> UserRegister_UDTracking { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<UserType_UDTracking> UserType_UDTracking { get; set; }
        public virtual DbSet<UserWiseBuyerAccess> UserWiseBuyerAccesses { get; set; }
        public virtual DbSet<BuyerViewAccess> BuyerViewAccesses { get; set; }
        public virtual DbSet<BuyerViewAccess_UDTracking> BuyerViewAccess_UDTracking { get; set; }
        public virtual DbSet<ProductDetail> ProductDetails { get; set; }
        public virtual DbSet<ProductDetails_UDTracking> ProductDetails_UDTracking { get; set; }
        public virtual DbSet<ProductFieldAccess> ProductFieldAccesses { get; set; }
        public virtual DbSet<ProductMaster> ProductMasters { get; set; }
        public virtual DbSet<ProductMaster_UDTracking> ProductMaster_UDTracking { get; set; }
    
        public virtual ObjectResult<spGetAllBuyerWithAccess_Result> spGetAllBuyerWithAccess(string prodID, Nullable<System.DateTime> chkDate, Nullable<int> previewFor)
        {
            var prodIDParameter = prodID != null ?
                new ObjectParameter("ProdID", prodID) :
                new ObjectParameter("ProdID", typeof(string));
    
            var chkDateParameter = chkDate.HasValue ?
                new ObjectParameter("chkDate", chkDate) :
                new ObjectParameter("chkDate", typeof(System.DateTime));
    
            var previewForParameter = previewFor.HasValue ?
                new ObjectParameter("previewFor", previewFor) :
                new ObjectParameter("previewFor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllBuyerWithAccess_Result>("spGetAllBuyerWithAccess", prodIDParameter, chkDateParameter, previewForParameter);
        }
    
        public virtual ObjectResult<spGetAllImage_Result> spGetAllImage(string buyerID, string catID, string prodID, string endUser, string style, string color, string wash, Nullable<int> previewFor)
        {
            var buyerIDParameter = buyerID != null ?
                new ObjectParameter("BuyerID", buyerID) :
                new ObjectParameter("BuyerID", typeof(string));
    
            var catIDParameter = catID != null ?
                new ObjectParameter("catID", catID) :
                new ObjectParameter("catID", typeof(string));
    
            var prodIDParameter = prodID != null ?
                new ObjectParameter("ProdID", prodID) :
                new ObjectParameter("ProdID", typeof(string));
    
            var endUserParameter = endUser != null ?
                new ObjectParameter("EndUser", endUser) :
                new ObjectParameter("EndUser", typeof(string));
    
            var styleParameter = style != null ?
                new ObjectParameter("Style", style) :
                new ObjectParameter("Style", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var washParameter = wash != null ?
                new ObjectParameter("Wash", wash) :
                new ObjectParameter("Wash", typeof(string));
    
            var previewForParameter = previewFor.HasValue ?
                new ObjectParameter("previewFor", previewFor) :
                new ObjectParameter("previewFor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllImage_Result>("spGetAllImage", buyerIDParameter, catIDParameter, prodIDParameter, endUserParameter, styleParameter, colorParameter, washParameter, previewForParameter);
        }
    }
}
